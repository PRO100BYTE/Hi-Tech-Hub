<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>